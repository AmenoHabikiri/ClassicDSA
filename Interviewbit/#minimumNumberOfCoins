import sys
import numpy as np
def solve(coin,s):
    INT_MAX=sys.maxsize-1
    n=len(coin)
    dp=[[0 for i in range(s+1)] for j in range(n+1)]
    for i in range(0,n+1):
        for j in range(s+1):
            if i==0 and j==0:
                dp[i][j]=INT_MAX
            elif j==0:
                dp[i][j]=0
            elif i==0:
                dp[i][j]=INT_MAX 
            elif i==1:
                if j%coin[i-1]==0:
                    dp[i][j]=j//coin[i-1]
                else:
                    dp[i][j]=INT_MAX
            elif coin[i-1]<=j:
                dp[i][j]=min(dp[i-1][j],1+dp[i][j-coin[i-1]])
            elif coin[i-1]>j:
                dp[i][j]=dp[i-1][j]
    if dp[-1][-1]==INT_MAX:
        return -1
    return dp[-1][-1]
coin=[2,6,5]
li=[]
for i in range(20):
    li.append([i,solve(coin,i)])
print(li)